<project name="FreakickAutomation" basedir="." default="help" xmlns:ivy="antlib:org.apache.ivy.ant">
    <taskdef resource="net/sf/antcontrib/antlib.xml" >
	  <classpath>
	    <pathelement location="Lib/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>
    <property environment="env" />
    <property file="${basedir}/build.properties" />
    <!-- should be overwritten -->
    <property name="test.username" value="" />
    <property name="test.password" value="" />
    <property name="test.server.url" value="" />
    <property name="test.selenium.grid" value="true" />
    <property name="report.dir" value="test-output" />
	<path id="FreakickAutomation.classpath">
		<pathelement location="bin"/>
		        <path refid="TestNG.libraryclasspath"/>
		        <pathelement location="Lib/gson-2.8.0.jar"/>
		        <pathelement location="Lib/ant-contrib-1.0b3.jar"/>
		        <pathelement location="Lib/hamcrest-core-1.3.jar"/>
		        <pathelement location="Lib/hamcrest-library-1.3.jar"/>
		        <pathelement location="Lib/junit-4.12.jar"/>
		        <pathelement location="Lib/jxl-2.6.12.jar"/>
		        <pathelement location="Lib/log4j-1.2.17.jar"/>
		        <pathelement location="Lib/opencsv-1.8.jar"/>
		        <pathelement location="Lib/selendroid-standalone-0.17.0-with-dependencies.jar"/>
		        <pathelement location="Lib/selenium-android-driver-2.30.0.jar"/>
		        <pathelement location="Lib/serializer-2.7.2.jar"/>
		        <pathelement location="Lib/testng.jar"/>
		        <pathelement location="Lib/guice-3.0.jar"/>
		        <pathelement location="Lib/spring-core-4.2.2.jar"/>
	    </path>
    <!-- end of should be overwritten -->
    <target name="help">
        <echo message="please specify a target" />
    </target>   
    <!-- chain of all events/targets -->
    <target name="all">
        <antcall target="stop.selenium" />
        <antcall target="clean" />
        <antcall target="compile" />
        <antcall target="start.selenium" />
        <antcall target="test" />
        <antcall target="stop.selenium" />
    </target>
    <target name="test.only">
        <antcall target="clean" />
        <antcall target="compile" />
        <antcall target="test" />
    </target>
    <target name="clean">
        <sleep seconds="5" />
        <delete dir="${bin.dir}" />
        <delete dir="${report.dir}" />
        <mkdir dir="${bin.dir}" />
        <mkdir dir="${lib.dir}" />
        <mkdir dir="${report.dir}" />
    </target>
    <target name="compile">
        <!-- resolve dependencies 
        <ivy:settings file="${ivy.settings}" />
        <ivy:retrieve file="${ivy.xml}" pattern="${lib.dir}/[artifact].[ext]" type="jar,bundle" conf="default" />-->
        <javac srcdir="${src.dir}" destdir="${bin.dir}">
            <classpath>
                <fileset dir="${lib.dir}" includes="*.jar" />
                <pathelement path="${bin.dir}" />
            </classpath>
        </javac>
        <!-- copy login data files (CSV) to classpath
        <copy todir="${bin.dir}">
            <fileset dir="data" includes="**/*.csv" />
        </copy> -->
        <!-- copy data files (CSV) to classpath -->
        <copy todir="${bin.dir}">
            <fileset dir="${src.dir}" includes="**/*.csv" />
        </copy>
    </target>
    <!-- import any dependencies -->
	<import file="parallel.xml" />
    <target name="test">
        <path id="test.classpath">
            <fileset dir="${lib.dir}" includes="*.jar" />
        </path>
        <taskdef resource="testngtasks" classpath="${lib.dir}/testng.jar" />
        <testng timeout="60000000" 
                failureproperty="tests.failed" 
                outputdir="${report.dir}" 
                parallel="${parallel.mode}" 
                threadCount="${thread.count}" 
                useDefaultListeners="false"
                listeners="com.freakick.utilities.Reporter">
            <jvmarg value="-Dtest.browser=${test.browser}" />
            <jvmarg value="-Dtest.username=${test.username}" />
            <jvmarg value="-Dtest.password=${test.password}" />
            <jvmarg value="-Dtest.server.url=${test.server.url}" />
            <jvmarg value="-Dtest.selenium.port=${test.selenium.port}" />
            <jvmarg value="-Dtest.selenium.server=${test.selenium.server}" />
        	<jvmarg value="-Dtest.selenium.grid=${test.selenium.grid}" />
        	<jvmarg value="-Dtest.set=${test.set}" />
        	<jvmarg value="-Dother.source.expression=${other.source.expression}" />
        	<jvmarg value="-Dtest.developer.mode=${test.developer.mode}" />
            <classpath>
                <path refid="test.classpath" />
                <pathelement location="${bin.dir}"/>
            </classpath>
            <xmlfileset dir="${basedir}" includes="${testng.xml}" />
        </testng>
    </target>
    <!--	Selenium targets 	-->
    <target name="start.selenium">
        <java classname="org.openqa.selenium.server.SeleniumServer" fork="true" spawn="true">
            <classpath>
                <path>
                    <fileset dir="${lib.dir}" includes="*.jar" />
                </path>
            </classpath>
            <arg line="-userExtensions ${src.dir}/user-extensions.js -port ${test.selenium.port} -singleWindow -log selenium.log" />
        </java>
        <echo message="Waiting for selenium server to start on port ${test.selenium.port}..." />
        <waitfor maxwait="10" maxwaitunit="second" checkevery="1" timeoutproperty="selenium.timeout">
            <http url="http://localhost:${test.selenium.port}/selenium-server/user-extensions.js" />
        </waitfor>
        <fail if="selenium.timeout" message="Selenium server did not start" />
        <echo message="Selenium server has started!" />
    </target>
    <target name="stop.selenium">
        <get taskname="selenium-shutdown" src="http://localhost:${test.selenium.port}/selenium-server/driver/?cmd=shutDownSeleniumServer" dest="result.txt" ignoreerrors="true" />
    </target>
</project>